'use strict';

var tag = document.createElement('script');
var eventDate = new Date();
var done = false;

tag.src = "https://www.youtube.com/iframe_api";
var firstScriptTag = document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

var ytplayer;

function onYouTubeIframeAPIReady() {
  console.log("onYouTubeIframeAPIReady");

  ytplayer = new YT.Player('player', {
    autoplay: false,
    events: {
      'onReady': onYouTubePlayerReady,
      'onStateChange': onPlayerStateChange
    }
  });
}

onYouTubeIframeAPIReady();

function onYouTubePlayerReady(event) {
  console.log("onYouTubePlayerReady");
  event.target.playVideo();
}


function onPlayerStateChange(newState) {
  console.log("onPlayerStateChange");

  if(newState.data==5)
  { newState='video cued'; }
  else if(newState.data==3)
  { newState='buffering'; }
  else if(newState.data==2)
  { newState='paused'; }
  else if(newState.data==1)
  { newState='playing'; }
  else if(newState.data==0)
  { newState='ended'; }
  else if(newState.data==-1)
  { newState='unstarted'; }
  else
  { newState='Status uncertain'; }

  console.log("Player's new state: " + newState + " " + eventDate + " " + ytplayer.getVideoUrl());

  var url = window.ltG.priv.fGetCurURL();
  var pageTitle = window.ltG.priv.fGetCurPageTitle();
  var video_id = ytplayer.getVideoUrl();

  var action = {
    verb: 'video-action',
    state: newState,
    username: ltG.userId,
    url: url,
    video_id: video_id,
    page_title: pageTitle,
    captured_at: ltG.toISOString(new Date(lt$.now()))
  };

  var msg = window.ltG.priv.fGenRawMsg(url, pageTitle, 'video-action', action);
  window.ltG.priv.fSendMsg(msg);
}

function loadnewvideo(videoid)
{
  ytplayer.loadVideoById(""+videoid+"", 5, "large");
}

