    # this is a playbook fragment - it must be included in a full playbook to be run
    # secrets.yml contains "git_deploy_token"
    - include_vars: ./secrets/secrets.yml
    - name:  Allow port 3333 access for CI server interface
      ufw: rule=allow port=3333 proto=tcp

    - name: Web | Install required packages (test env requirements)
      action: apt pkg={{ item }} state=installed update_cache=true
      with_items:
        - qt5-default
        - libqt5webkit5-dev

    - shell: which phantomjs && echo "exists" || echo "not installed"
      register: phantomjs_installed
    - name: Install phantomjs (for test env)
      shell: wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-1.9.7-linux-x86_64.tar.bz2
      args:
        chdir: /usr/local/share
      when: phantomjs_installed.stdout.find('exists') == -1
    - shell: tar xjf phantomjs-1.9.7-linux-x86_64.tar.bz2
      args:
        chdir: /usr/local/share
      when: phantomjs_installed.stdout.find('exists') == -1
      # link new install to location on the path
    - shell: ln -s -f /usr/local/share/phantomjs-1.9.7-linux-x86_64/bin/phantomjs /usr/local/share/phantomjs &&  ln -s -f /usr/local/share/phantomjs-1.9.7-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs
      args:
        chdir: /usr/local/share
      when: phantomjs_installed.stdout.find('exists') == -1

    - name: Install Bundler
      gem: name=bundler state=present user_install=no

    - name: Permit lt_admin to run bundle with no password on CI server
      lineinfile: >
        dest=/etc/sudoers
        insertbefore=EOF
        regexp=""
        line="lt_admin ALL=(ALL) NOPASSWD: /usr/local/bin/bundle, /usr/local/bin/bundler"
    - name: Install cruise control CI server
      shell: mkdir -p /usr/local/share/cruise_control
    - shell: git init .
      args: 
        chdir: /usr/local/share/cruise_control
    - shell: git pull https://github.com/thoughtworks/cruisecontrol.rb/
      args: 
        chdir: /usr/local/share/cruise_control
    - shell: bundle install --without test development jruby
      args: 
        chdir: /usr/local/share/cruise_control
    - name: Ensure cruise control restarts on reboot
      lineinfile: >
        dest=/etc/rc.local
        regexp=""
        insertbefore="^exit"
        line="sudo -u lt_admin /usr/local/share/cruise_control/cruise start"
    - shell: mkdir -p /home/lt_admin/.cruise
      sudo_user: lt_admin
    - copy: >
        src="./roles/web/files/site_config.rb"
        dest=/home/lt_admin/.cruise
        mode="0550"
        force=yes
        group=root
        owner=lt_admin
    - shell: chmod uga+r /usr/local/share/cruise_control/cruise
    - shell: chown -R lt_admin:root /usr/local/share/cruise_control
    - shell: rm -rf /home/lt_admin/.cruise/projects/learning_tapestry
      sudo_user: root
    - shell: ruby cruise add learning_tapestry -r https://{{git_deploy_token}}@github.com/science/learntaculous.git -s git
      sudo_user: lt_admin
      args: 
        chdir: /usr/local/share/cruise_control
    - copy: >
        src="./roles/web/files/cruise_config.rb"
        dest=/home/lt_admin/.cruise/projects/learning_tapestry
        mode="0550"
        force=yes
        group=root
        owner=lt_admin
    - name: Install codebase into CruiseControl path
      include: fragment-update-web-application.yml code_install_folder=/home/lt_admin/.cruise/projects/learning_tapestry/work
    - shell: chown -R lt_admin:root /home/lt_admin/.cruise/projects/learning_tapestry/work
    - name: Start Cruise Control server (will restart on reboot)
      shell: sudo -u lt_admin nohup /usr/local/share/cruise_control/cruise start &
