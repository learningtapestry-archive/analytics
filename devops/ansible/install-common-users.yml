---
  # This file will create deploy and lt_admin users with appropriate rights/access,
  # and remove remote access for root user
  # run: 
  #  ansible-playbook -i staging-hosts.rb --ask-vault-pass install-common-users.yml 
  - hosts: common
    #serial: 1
    vars:
      ansible_ssh_host: "{{inventory_hostname}}.learningtapestry.com"
      ansible_ssh_user: root
      ansible_ssh_private_key_file: ./secrets/id_lt_admin
    tasks:
    # secrets.yml contains "deploy_password"
    - include_vars: ./secrets/secrets.yml
    - local_action: "command openssl passwd -salt '{{password_salt}}' -1 '{{lt_admin_password}}'"
      register: lt_admin_hash
    - local_action: "command openssl passwd -salt '{{password_salt}}' -1 '{{deploy_password}}'"
      register: deploy_hash
    - local_action: "command openssl passwd -salt '{{password_salt}}' -1 '{{root_password}}'"
      register: root_hash
    - name: Create deploy user in sudo group
      user: >
        name=deploy
        state=present
        createhome=yes
        password="{{deploy_hash.stdout}}"
        group=www-data
        groups=sudo
        shell=/bin/bash
        ssh_key_file=./secrets/id_deploy
    - name: Set up authorized_keys for the deploy user
      authorized_key: >
        user=deploy
        key="{{ item }}"
      with_file:
        - ./secrets/id_deploy.pub
    - debug: "msg=Remember to copy ./secrets/id_lt_admin to your ~/.ssh folder"
    - name: Create lt_admin user in sudo group
      user: >
        name=lt_admin
        state=present
        createhome=yes
        password="{{lt_admin_hash.stdout}}"
        group=www-data
        groups=sudo
        shell=/bin/bash
        ssh_key_file=./secrets/id_lt_admin
    - name: Set up authorized_keys for the lt_admin user
      authorized_key: >
        user=lt_admin
        key="{{ item }}"
      with_file:
        - ./secrets/id_lt_admin.pub
    - name: Set root password to secure password
      user: >
        name=root
        state=present
        password="{{root_hash.stdout}}"
    - name: Remove authorized_keys file for root user to disable remote access
      file: >
        name=/root/.ssh/authorized_keys
        state=absent
    - name: Update sshd_config file to prevent root login over ssh
      lineinfile: >
        state=absent
        dest=/etc/ssh/sshd_config
        regexp='^PasswordAuthentication .*'
    - lineinfile: >
        state=absent
        dest=/etc/ssh/sshd_config
        regexp='^PermitRootLogin .*'
    - lineinfile: >
        state=present
        dest=/etc/ssh/sshd_config
        regexp=''
        insertafter=EOF
        line='PasswordAuthentication no\nPermitRootLogin no'
    - shell: service ssh restart
