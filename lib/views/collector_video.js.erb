var tag = document.createElement('script');
var eventDate = new Date();
var done = false;

var session_id = guid();

tag.src = "https://www.youtube.com/iframe_api";
var firstScriptTag = document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

function onYouTubeIframeAPIReady() {
  var iframes = document.getElementsByTagName('iframe');

  for (var i = 0; i < iframes.length; i++) {
    if (iframes[i].src.indexOf('youtube.com') !== -1) {
      new YT.Player(iframes[i], {
        autoplay: false,
        events: {
          'onReady': onYouTubePlayerReady,
          'onStateChange': onPlayerStateChange
        }
      });
    }
  }
}

function onYouTubePlayerReady(event) {
  //event.target.playVideo();
}


function onPlayerStateChange(event) {
  var newStateWord='';

  if(event.data==5)
  { newStateWord='video cued'; }
  else if(event.data==3)
  { newStateWord='buffering'; }
  else if(event.data==2)
  { newStateWord='paused'; }
  else if(event.data==1)
  { newStateWord='playing'; }
  else if(event.data==0)
  { newStateWord='ended'; }
  else if(event.data==-1)
  { newStateWord='unstarted'; }
  else
  { newStateWord='Status uncertain'; }

  if (event.data != -1 && event.data != 3 && event.data != 5) { // don't send unstarted and buffering events

    console.log("Player's new state: " + newStateWord + " " + eventDate + " " + event.target.getVideoUrl());

    var url = window.ltG.priv.fGetCurURL();
    var pageTitle = window.ltG.priv.fGetCurPageTitle();
    var video_id = event.target.getVideoUrl();

    var action = {
      verb: 'video_action',
      state: newStateWord,
      username: ltG.userId,
      url: url,
      video_id: video_id,
      page_title: pageTitle,
      captured_at: ltG.toISOString(new Date(lt$.now())),
      session_id: session_id
    };

    var msg = window.ltG.priv.fGenRawMsg(url, pageTitle, 'video_action', action);
    window.ltG.priv.fSendMsg(msg);
  }
}

function guid() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
  }
  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
}
